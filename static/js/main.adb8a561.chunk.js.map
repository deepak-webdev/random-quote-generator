{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quotes","quote","author","index","getRandomIndex","length","Math","floor","random","setState","fetch","then","res","json","data","this","tweetUrl","className","id","class","href","target","rel","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAmFeA,E,4MA7EbC,MAAQ,CACNC,OAAQ,CACN,CACEC,MACE,8EACFC,OAAQ,gBAGZC,MAAO,G,EAgBTC,eAAiB,WACf,IAAQJ,EAAW,EAAKD,MAAhBC,OACR,GAAIA,EAAOK,OAAS,EAAG,CACrB,IAAMF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWR,EAAOK,QAChD,EAAKI,SAAS,CACZN,Y,uDAlBN,WAAqB,IAAD,OAClBO,MAdF,0IAeKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKL,SACH,CACET,OAAQc,EAAKd,QAEf,EAAKI,qB,oBAeb,WACE,MAA0BW,KAAKhB,MACzBE,EADN,EAAQD,OAAR,EAAgBG,OAEVa,EAAQ,gDAA4Cf,EAAMA,MAAlD,aAA4DA,EAAMC,QAChF,OACE,qBAAKe,UAAU,0DAAf,SACE,sBAAKA,UAAU,oCAAoCC,GAAG,YAAtD,UACGjB,GACC,sBAAKgB,UAAU,OAAf,UACE,oBAAGC,GAAG,OAAOD,UAAU,eAAvB,UACE,mBAAGE,MAAM,sBACRlB,EAAMA,SAET,uBAAMiB,GAAG,SAASD,UAAU,+BAA5B,cACIhB,EAAMC,aAKd,sBAAKe,UAAU,iCAAf,UACE,mBACEA,UAAU,MACVG,KAAMJ,EACNK,OAAO,SACPC,IAAI,aACJJ,GAAG,cALL,SAOE,mBAAGD,UAAU,oBAEf,wBACEA,UAAU,MACVM,QAASR,KAAKX,eACdc,GAAG,YAHL,mC,GAhEMM,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adb8a561.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nconst api_url =\n  \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nclass App extends React.Component {\n  state = {\n    quotes: [\n      {\n        quote:\n          \"Life isn’t about getting and having, it’s about giving and being.\",\n        author: \"Kevin Kruse\",\n      },\n    ],\n    index: 0,\n  };\n\n  componentDidMount() {\n    fetch(api_url)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState(\n          {\n            quotes: data.quotes,\n          },\n          this.getRandomIndex\n        );\n      });\n  }\n\n  getRandomIndex = () => {\n    const { quotes } = this.state;\n    if (quotes.length > 0) {\n      const index = Math.floor(Math.random() * quotes.length);\n      this.setState({\n        index,\n      });\n    }\n  };\n\n  render() {\n    const { quotes, index } = this.state;\n    const quote = quotes[index];\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${quote.quote} -${quote.author}`;\n    return (\n      <div className=\"d-flex justify-content-center align-items-center vh-100\">\n        <div className=\"col-6 p-4 quote-container rounded\" id=\"quote-box\">\n          {quote && (\n            <div className=\"mb-3\">\n              <p id=\"text\" className=\"fs-3 fw-bold\">\n                <i class=\"fa fa-quote-left \"></i>\n                {quote.quote}\n              </p>\n              <cite id=\"author\" className=\"d-block quote-author fw-bold\">\n                -{quote.author}\n              </cite>\n            </div>\n          )}\n\n          <div className=\"d-flex justify-content-between\">\n            <a\n              className=\"btn\"\n              href={tweetUrl}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              id=\"tweet-quote\"\n            >\n              <i className=\"fa fa-twitter\"></i>\n            </a>\n            <button\n              className=\"btn\"\n              onClick={this.getRandomIndex}\n              id=\"new-quote\"\n            >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}